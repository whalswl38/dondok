--팀멤버 테이블
DROP SEQUENCE TEAMMEMBERSEQ;
CREATE SEQUENCE TEAMMEMBERSEQ;
--팀ID, 개인ID, 입금여부, 진행단계
DROP TABLE TEAMMEMBER;
CREATE TABLE TEAMMEMBER(
TM_TID NUMBER NOT NULL,--시퀀스
TM_UID VARCHAR2(20) NOT NULL,
TM_DEPFLAG VARCHAR2(2),--입금 여부
TM_STAGE NUMBER NOT NULL,--진행 단계
	CONSTRAINT TEAMMEMBER_PK PRIMARY KEY(TM_TID,TM_UID),
	CONSTRAINT TEAMMEMBER_CHK_ENABLED CHECK(TM_DEPFLAG IN ('Y', 'N'))
);
select * FROM TEAMMEMBER;
delete from TEAMMEMBER where TM_UID='test1';
--팀 테이블
DROP SEQUENCE TEAMSEQ;
CREATE SEQUENCE TEAMSEQ;
DROP TABLE TEAM;
--팀ID, 팀이름(제목), 리더ID, 일차, 여행시작, 여행종료, (목표)종료날짜(YYYYMMDD), 진행단계, 일정완료여부
CREATE TABLE TEAM(
T_ID NUMBER,
T_NAME VARCHAR2(200),
T_LEADERID VARCHAR2(200),
T_DAYS VARCHAR2(200),
T_STARTDATE VARCHAR2(200),
T_ENDDATE VARCHAR2(200),
T_STAGE VARCHAR2(200),
T_DEADLINE VARCHAR2(200),
T_FLAG VARCHAR2(2),
	CONSTRAINT TEAM_PK PRIMARY KEY(T_ID),
	CONSTRAINT TEAM_CHK_ENABLED CHECK(T_FLAG IN ('Y', 'N'))
);
SELECT * FROM TEAM;

--팀ID, 일차, 지역
CREATE TABLE REGION(
R_TID NUMBER,
R_DAY VARCHAR2(200),
R_LOCATION VARCHAR2(200)
);

--장소 테이블
--장소id, 카테고리, 장소이름, 주소, X좌표, Y좌표,장소URL, 팀ID, 멤버ID, 일차
DROP TABLE LOCATION;
CREATE TABLE LOCATION(
LOC_ID NUMBER,
LOC_CATE NUMBER,
LOC_NAME VARCHAR(200),
LOC_ADDR VARCHAR(200),
LOC_X VARCHAR(20),
LOC_Y VARCHAR(20),
LOC_URL VARCHAR(200),
LOC_TID NUMBER,
LOC_MID VARCHAR(200),
LOC_DAY VARCHAR(20),
CONSTRAINT LOCATION_PK PRIMARY KEY (LOC_ID,LOC_TID,LOC_DAY),
CONSTRAINT LOCATION_FK FOREIGN KEY(LOC_CATE) REFERENCES CATEGORY(C_CATE)
);
select * from LOCATION where loc_day='1';
select * from location where loc_cate=1;

--숙소(개인 투표)테이블
DROP TABLE VoROOM;
CREATE TABLE VoROOM(
VOROOM_TID NUMBER,
VOROOM_MID VARCHAR(20),
VOROOM_ID NUMBER,
VOROOM_DAY VARCHAR(20),
CONSTRAINT VoROOM_PK PRIMARY KEY (VoROOM_TID,VoROOM_MID,VoROOM_DAY)
);
SELECT * FROM VOROOM; 
insert into voroom values(1,'test1',123,'3');
SELECT *
FROM(
select  VOROOM_ID, VOROOM_DAY, VOROOM_CNT, RANK() OVER(PARTITION BY VOROOM_DAY ORDER BY VOROOM_CNT DESC) AS RANK
from(select voroom_id,voroom_day, count(*) as VOROOM_CNT from voroom where voroom_tid=1 group by voroom_id,voroom_day)
)
WHERE RANK=1;

--경로 테이블
CREATE TABLE ROUTE(
R_NO NUMBER,
R_ID VARCHAR2(250),
R_ACCDATE VARCHAR2(250),
R_ROUTE VARCHAR2(250),
CONSTRAINT ROUTE_PK PRIMARY KEY (R_NO)
);
select * from route;

--계좌 테이블
DROP TABLE ACCOUNT;
CREATE TABLE ACCOUNT(
ACC_TID NUMBER,
ACC_HOLDER VARCHAR2(200),
ACC_BANK VARCHAR2(200),
ACC_NUM VARCHAR2(200),
ACC_PRICE VARCHAR2(200),
ACC_MILEAGE VARCHAR2(200),
CONSTRAINT ACCOUNT_PK PRIMARY KEY (ACC_TID),
CONSTRAINT ACCOUNT_FK FOREIGN KEY(ACC_TID) REFERENCES TEAM(T_ID)
);
select * from account;
delete from account;
----------------------------------------------------------------------------???
--카테고리 테이블
--NO(1,2,3), 이름(숙소AD5,음식점FD6,명소AT4)
CREATE TABLE CATEGORY(
C_CATE NUMBER,
C_NAME VARCHAR(20),
CONSTRAINT CATEGORY_PK PRIMARY KEY (C_CATE)
);
INSERT INTO CATEGORY VALUES(1,'숙소');
INSERT INTO CATEGORY VALUES(2,'음식점');
INSERT INTO CATEGORY VALUES(3,'명소');
SELECT * FROM CATEGORY;

--멤버 테이블(개인)
DROP TABLE MYMEMBER;
--ID,닉네임,비밀번호,이름,이메일,전화번호,가입여부('Y','N'),등급('USER','ADMIN')
CREATE TABLE MYMEMBER(
M_ID VARCHAR2(250) NOT NULL,
M_NICK VARCHAR2(250) NOT NULL,
M_PASS VARCHAR2(250) NOT NULL,
M_NAME VARCHAR2(250) NOT NULL,
M_EMAIL VARCHAR2(300) NOT NULL,
M_PHONE VARCHAR2(300) NOT NULL,
M_FLAG VARCHAR2(2) NOT NULL,
M_GRADE VARCHAR2(100) NOT NULL,

CONSTRAINT MEMBER_PK PRIMARY KEY (M_ID),
CONSTRAINT MEMBER_UQ_NICK UNIQUE (M_NICK),
CONSTRAINT MEMBER_UQ_PHONE UNIQUE (M_PHONE),
CONSTRAINT MEMBER_UQ_EMAIL UNIQUE (M_EMAIL),
CONSTRAINT MEMBER_CHK_ENABLED CHECK(M_FLAG IN ('Y', 'N'))
);
--pk(아이디), unique(닉네임, 전화번호, 이메일)
INSERT INTO MYMEMBER VALUES('test1','조지', '1111', '조민지', 'kei01118@naver.com', '01037248165','Y', 'USER');
INSERT INTO MYMEMBER VALUES('test2','조지1', '1111', '박철규', 'zan03083@naver.com', '01085215713','Y', 'USER');
INSERT INTO MEMBER VALUES('test3','조지2', '1111', '김동주', 'ehddek@naver.com', '01057607492','Y', 'USER');
INSERT INTO MYMEMBER VALUES('test4','조지4', '1111', '배진한', 'ehddeㅇ@naver.com', '01012107492','Y', 'USER');
INSERT INTO MYMEMBER VALUES('lee','조지3', '1111', '이다희', 'kei01119@naver.com', '0103724816','Y', 'USER');
SELECT * FROM MYMEMBER;
